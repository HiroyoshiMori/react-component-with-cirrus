import {Fragment} from "react";
import {
    Container,
} from "../../../../components";
import {deIndent} from "../../../../utils";

/**
 * The &lt;q&gt; HTML element indicates that the enclosed text is a short inline quotation. Most modern browsers
 * implement this by surrounding the text in quotation marks. This element is intended for short quotations that
 * don't require paragraph breaks; for long quotations use the &lt;blockquote&gt; element.
 */
export default {
    title: 'React Component/Element/Container/Inline/Q',
    component: Container,
    tags: ['autodocs'],
    parameters: {
        componentSubtitle: 'The Inline Quotation element',
    },
    argTypes: {
        element: {
            control: 'none',
            description: 'Switcher for <code>Container</code> component to render &lt;q&gt;',
            type: {
                required: true,
            },
            table: {
                type: {
                    summary: '"q"',
                },
            },
        },
        inline: {
            control: 'boolean',
            description: 'Indicate inline-level element',
            type: {
                required: true,
            },
            table: {
                type: {
                    summary: 'true',
                },
            },
        },
        id: {
            control: 'text',
            description: 'ID for element',
            table: {
                type: {
                    summary: 'string',
                },
                defaultValue: {
                    summary: 'undefined',
                },
            },
        },
        children: {
            control: 'object',
            description: 'Content of element',
            table: {
                type: {
                    summary: 'ReactNode',
                },
                defaultValue: {
                    summary: 'undefined',
                },
            },
        },
        cite: {
            control: 'text',
            description: 'Store URI designates a source document or message for the information quoted',
            table: {
                type: {
                    summary: 'string',
                },
                defaultValue: {
                    summary: 'undefined',
                },
            },
        },
        classes: {
            control: 'object',
            description: 'Style classes',
            table: {
                type: {
                    summary: 'string[]',
                },
                defaultValue: {
                    summary: 'undefined',
                    detail: 'When undefined, treated as []',
                },
            },
        },
        attributes: {
            control: 'object',
            description: 'Additional attributes',
            table: {
                type: {
                    summary: 'HTMLAttributes<HTMLQuoteElement>',
                    detail: deIndent(`
                            e.g.,
                            { 'aria-label': 'This is Label' }
                        `),
                },
                defaultValue: {
                    summary: 'undefined',
                    detail: 'When undefined, treated as {}',
                },
            },
        },
        datasets: {
            control: 'object',
            description: 'Datasets. "data-" is added at the beginning of all keys',
            table: {
                type: {
                    summary: 'Map<string, string>',
                    detail: deIndent(`
                            e.g.,
                            new Map([
                                ['id', 'this-is-id'],
                                ['name', 'This is Name'],
                            ]);
                            => data-id="this-is-id" data-name="This is Name"
                        `),
                },
                defaultValue: {
                    summary: 'undefined',
                    detail: 'When undefined, treated as new Map()'
                },
            },
        },
    },
};
// Default quote property
const DefaultQuoteProps = {
    element: 'q',
    inline: true,
};

/** Default quote */
export const Default = {
    render: (args: any) => <Fragment>
        This document is generated by <Container
            {...DefaultQuoteProps}
            {...args}
        >
            Storybook
        </Container>
    </Fragment>,
};
/** Quote with cite attribute */
export const QuoteWithCiteAttribute = {
    ...Default,
    args: {
        cite: 'https://storybook.js.org/',
    },
};
/** Quote with style classes */
export const QuoteWithStyleClasses = {
    ...Default,
    args: {
        classes: ['test-class1', 'test-class2'],
    },
};
/** Quote with additional attributes */
export const QuoteWithAdditionalAttributes = {
    ...Default,
    args: {
        attributes: {
            'aria-label': 'Quote Label',
            'aria-placeholder': 'Quote Placeholder',
        },
    },
};
/** Quote with datasets */
export const QuoteWithDatasets = {
    ...Default,
    args: {
        datasets: new Map([
            ['id', 'quote-data-id'],
            ['name', 'Quote Data Name'],
        ]),
    },
};
